{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Anim\\\\Desktop\\\\alkamerica\\\\pages\\\\form.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport Layout from '../components/Layout';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      name: '',\n      email: '',\n      message: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      axios({\n        method: \"POST\",\n        url: \"http://localhost:3000/send\",\n        data: this.state\n      }).then(function (response) {\n        if (response.data.status === 'success') {\n          alert(\"Message Sent.\");\n\n          _this2.resetForm();\n        } else if (response.data.status === 'fail') {\n          alert(\"Message failed to send.\");\n        }\n      });\n    }\n  }, {\n    key: \"resetForm\",\n    value: function resetForm() {\n      this.setState({\n        name: '',\n        email: '',\n        message: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        id: \"contact-form\",\n        onSubmit: this.handleSubmit.bind(this),\n        method: \"POST\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Name\"), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"name\",\n        value: this.state.name,\n        onChange: this.onNameChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"exampleInputEmail1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Email address\"), __jsx(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        id: \"email\",\n        \"aria-describedby\": \"emailHelp\",\n        value: this.state.email,\n        onChange: this.onEmailChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Message\"), __jsx(\"textarea\", {\n        className: \"form-control\",\n        rows: \"5\",\n        id: \"message\",\n        value: this.state.message,\n        onChange: this.onMessageChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), __jsx(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }, {\n    key: \"onNameChange\",\n    value: function onNameChange(event) {\n      this.setState({\n        name: event.target.value\n      });\n    }\n  }, {\n    key: \"onEmailChange\",\n    value: function onEmailChange(event) {\n      this.setState({\n        email: event.target.value\n      });\n    }\n  }, {\n    key: \"onMessageChange\",\n    value: function onMessageChange(event) {\n      this.setState({\n        message: event.target.value\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Anim/Desktop/alkamerica/pages/form.js"],"names":["React","axios","Layout","App","props","state","name","email","message","e","preventDefault","method","url","data","then","response","status","alert","resetForm","setState","handleSubmit","bind","onNameChange","onEmailChange","onMessageChange","event","target","value","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport Layout from '../components/Layout';\r\n\r\n\r\nclass App extends React.Component{\r\n  \r\n  constructor(props) {\r\n\tsuper(props);\r\n\tthis.state = {\r\n  \tname: '',\r\n  \temail: '',\r\n  \tmessage: ''\r\n\t}\r\n  }\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault();\r\n    axios({\r\n      method: \"POST\", \r\n      url:\"http://localhost:3000/send\", \r\n      data:  this.state\r\n    }).then((response)=>{\r\n      if (response.data.status === 'success'){\r\n        alert(\"Message Sent.\"); \r\n        this.resetForm()\r\n      }else if(response.data.status === 'fail'){\r\n        alert(\"Message failed to send.\")\r\n      }\r\n    })\r\n  }\r\n\r\n  resetForm(){\r\n    \r\n     this.setState({name: '', email: '', message: ''})\r\n  }\r\n  \r\n  render() {\r\n\treturn(\r\n  \t<div className=\"App\">\r\n  \t<form id=\"contact-form\" onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\r\n  \t<div className=\"form-group\">\r\n      \t<label htmlFor=\"name\">Name</label>\r\n      \t<input type=\"text\" className=\"form-control\" id=\"name\" value={this.state.name} onChange={this.onNameChange.bind(this)} />\r\n  \t</div>\r\n  \t<div className=\"form-group\">\r\n      \t<label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n      \t<input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" value={this.state.email} onChange={this.onEmailChange.bind(this)} />\r\n  \t</div>\r\n  \t<div className=\"form-group\">\r\n      \t<label htmlFor=\"message\">Message</label>\r\n      \t<textarea className=\"form-control\" rows=\"5\" id=\"message\" value={this.state.message} onChange={this.onMessageChange.bind(this)} />\r\n  \t</div>\r\n  \t<button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n  \t</form>\r\n  \t</div>\r\n\t);\r\n  }\r\n\r\n  onNameChange(event) {\r\n\tthis.setState({name: event.target.value})\r\n  }\r\n\r\n  onEmailChange(event) {\r\n\tthis.setState({email: event.target.value})\r\n  }\r\n\r\n  onMessageChange(event) {\r\n\tthis.setState({message: event.target.value})\r\n  }\r\n  \r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}